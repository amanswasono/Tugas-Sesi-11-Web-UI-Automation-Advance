{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-13T13:14:53.295Z",
    "end": "2025-08-13T13:14:56.070Z",
    "duration": 2775,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e44a0ebe-5eeb-4f8d-8e5e-c377d2f00a46",
      "title": "",
      "fullFile": "C:\\Users\\1139\\Desktop\\Tugas Sesi 11 - Web UI Automation Advance Part 2\\tests\\sauceDemo.test.js",
      "file": "\\tests\\sauceDemo.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3cae1032-0f57-4b81-b68f-1fb0865d5a41",
          "title": "Sauce Demo - POM + Visual Testing",
          "fullFile": "C:\\Users\\1139\\Desktop\\Tugas Sesi 11 - Web UI Automation Advance Part 2\\tests\\sauceDemo.test.js",
          "file": "\\tests\\sauceDemo.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Sauce Demo - POM + Visual Testing\"",
              "fullTitle": "Sauce Demo - POM + Visual Testing \"before all\" hook in \"Sauce Demo - POM + Visual Testing\"",
              "timedOut": false,
              "duration": 1124,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const options = new chrome.Options();\noptions.addArguments('--headless', '--window-size=1920,1080');\ndriver = await new Builder().forBrowser('chrome').setChromeOptions(options).build();\n// // Set ukuran viewport agar visual testing konsisten\nawait driver.manage().window().setRect({ width: 1366, height: 768 });\nloginPage = new LoginPage(driver);\nproductsPage = new ProductsPage(driver);",
              "err": {},
              "uuid": "3e2c4ff6-f675-40e2-9ad9-23de24a83fc9",
              "parentUUID": "3cae1032-0f57-4b81-b68f-1fb0865d5a41",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Sauce Demo - POM + Visual Testing\"",
              "fullTitle": "Sauce Demo - POM + Visual Testing \"after all\" hook in \"Sauce Demo - POM + Visual Testing\"",
              "timedOut": false,
              "duration": 162,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "208cf66f-2f1f-4f30-a967-46c4c4f60a92",
              "parentUUID": "3cae1032-0f57-4b81-b68f-1fb0865d5a41",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Visual Testing - Halaman Login",
              "fullTitle": "Sauce Demo - POM + Visual Testing Visual Testing - Halaman Login",
              "timedOut": false,
              "duration": 953,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.open();\nconst logoElement = await loginPage.getLoginLogo();\nconst baselinePath = path.join(__dirname, '../baselines/login_logo.png');\nconst currentPath = path.join(__dirname, '../output/login_logo_current.png');\nconst diffPath = path.join(__dirname, '../output/login_logo_diff.png');\nconst result = await compareScreenshot(driver, logoElement, baselinePath, currentPath, diffPath);\nif (!result.baselineCreated) {\n    assert.strictEqual(result.mismatch, 0, `Visual mismatch: ${result.mismatch} pixel berbeda`);\n}",
              "err": {},
              "uuid": "8027b003-7e4e-4e82-8b57-fae3d3cedbd5",
              "parentUUID": "3cae1032-0f57-4b81-b68f-1fb0865d5a41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User berhasil login",
              "fullTitle": "Sauce Demo - POM + Visual Testing User berhasil login",
              "timedOut": false,
              "duration": 336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await loginPage.login('standard_user', 'secret_sauce');\nconst title = await productsPage.getTitle();\nassert.strictEqual(title, 'Products');",
              "err": {},
              "uuid": "dd45a3fe-de86-4872-a89f-18461ca420e4",
              "parentUUID": "3cae1032-0f57-4b81-b68f-1fb0865d5a41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User berhasil sort produk A-Z",
              "fullTitle": "Sauce Demo - POM + Visual Testing User berhasil sort produk A-Z",
              "timedOut": false,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await productsPage.sortByNameAsc();\nconst productNames = await productsPage.getAllProductNames();\nconst sortedNames = [...productNames].sort();\nassert.deepStrictEqual(productNames, sortedNames);",
              "err": {},
              "uuid": "aadfd5dd-5ef0-4d59-a028-4f81e45370f3",
              "parentUUID": "3cae1032-0f57-4b81-b68f-1fb0865d5a41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8027b003-7e4e-4e82-8b57-fae3d3cedbd5",
            "dd45a3fe-de86-4872-a89f-18461ca420e4",
            "aadfd5dd-5ef0-4d59-a028-4f81e45370f3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1482,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}